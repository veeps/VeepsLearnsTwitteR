library(twitteR)
library(data.table)
library(digest)
library(SnowballC)
library(tm)
library(syuzhet)
install.packages("twitteR")
install.packages("data.table")
install.packages("digest")
install.packages("SnowballC")
install.packages("tm")
install.packages("syuzhet")
library(twitteR)
library(data.table)
library(digest)
library(SnowballC)
library(tm)
library(syuzhet)
consumer_key <- "Fg1Hj8iXy6DjfLU8rO2h1tW6y"
consumer_secret <- "W4bwfep1ELehFcH1LDODahnidRcJVbz8LZSDZidaOlyg9NW42q"
access_token <- "281326158-EE628YRKt5yOr0KpPEEBgDlGCg7eT6Q2eonsAM75"
access_secret <- "1JJJ9cRYQwSS8Zk1cahgE94j5DWn8h00j0ibLKtzubmM8"
options(httr_oauth_cache=T) #This will enable the use of a local file to cache OAuth access credentials between R sessions.
setup_twitter_oauth(consumer_key,
consumer_secret,
access_token,
access_secret)
create_self <- getUser("create_self")
create_self_follower_IDs<-create_self$getFollowers(retryOnRateLimit=180)
length(create_self_follower_IDs)
create_self_followers_df = rbindlist(lapply(create_self_follower_IDs,as.data.frame))
create_self_followers_df<-subset(create_self_followers_df, location!="") #remove blanks
create_self_followers_df$location<-gsub("%", " ",create_self_followers_df$location) #remove % signs
#check
head(create_self_followers_df$location, 10)
#Install key package helpers:
source("https://raw.githubusercontent.com/LucasPuente/geocoding/master/geocode_helpers.R")
#Install modified version of the geocode function
#(that now includes the api_key parameter):
source("https://raw.githubusercontent.com/LucasPuente/geocoding/master/modified_geocode.R")
geocode_apply<-function(x){
geocode(x, source = "google", output = "all", api_key="AIzaSyCqszyMHF8F00_mvzZbkqAHgmmGUepXuaE")
}
#geocode user locations
geocode_results<-sapply(create_self_followers_df$location, geocode_apply, simplify = F)
View(geocode_results)
length(geocode_results)
class(geocode_results)
##cleaning geocode
condition_a <- sapply(geocode_results, function(x) x["status"]=="OK")
geocode_results_a<-geocode_results[condition_a] #remove everything without status OK
length(geocode_results_a)
condition_b <- lapply(geocode_results, lapply, length)
condition_b2<-sapply(condition_b, function(x) x["results"]=="1") #remove everything with status ANY
geocode_results<-geocode_results[condition_b2]
length(geocode_results)
## clean misformatting
source("https://raw.githubusercontent.com/LucasPuente/geocoding/master/cleaning_geocoded_results.R")
length(geocode_results)
results_b<-lapply(geocode_results, as.data.frame)
results_c <-lapply(results_b,function(x) subset(x, select=c("results.formatted_address",
"results.geometry.location")))
results_d<-lapply(results_c,function(x) data.frame(Location=x[1,"results.formatted_address"],
lat=x[1,"results.geometry.location"],
lng=x[2,"results.geometry.location"]))
results_e<-rbindlist(results_d)
View(results_e)
results_f<-results_e[,Original_Location:=names(results_d)]
View(results_f)
american_results<-subset(results_f,
grepl(", USA", results_f$Location)==TRUE)
View(american_results)
install.packages("maps")
install.packages("mapproj")
library(maps)
library(mapproj)
albers_proj<-map("state", proj="albers", param=c(39, 45),
col="#999999", fill=FALSE, bg=NA, lwd=0.2, add=FALSE, resolution=1)
#add points to map
points(mapproject(american_results$lng, american_results$lat), col=NA, bg="#00000030", pch=21, cex=1.0)
#add points to map
points(mapproject(american_results$lng, american_results$lat), col=NA, bg="#ffffff", pch=21, cex=1.0)
#add points to map
points(mapproject(american_results$lng, american_results$lat), col=NA, bg="#D3D3D3", pch=21, cex=1.0)
#add points to map
points(mapproject(american_results$lng, american_results$lat), col=NA, bg="#D3D3D3", pch=10, cex=1.0)
#add points to map
points(mapproject(american_results$lng, american_results$lat), col=NA, bg="#D3D3D3", pch=21, cex=0.5)
#add points to map
points(mapproject(american_results$lng, american_results$lat), col=NA, bg="#D3D3D3", pch=21, cex=1.0)
#write results into CSV for future
write.csv(results_f, file="VeepsTwitterFollowers.csv")
setwd(/git)
setwd("/git")
setwd("git/VeepsLearnsTwitteR")
#write results into CSV for future
write.csv(results_f, file="VeepsTwitterFollowers.csv")
View(results_f)
points(visit.x,visit.y, col="red", pch=16)
